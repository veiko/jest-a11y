"use strict";(self.webpackChunkjest_a11y=self.webpackChunkjest_a11y||[]).push([[354],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=c(a),u=l,g=m["".concat(s,".").concat(u)]||m[u]||p[u]||r;return a?n.createElement(g,i(i({ref:t},d),{},{components:a})):n.createElement(g,i({ref:t},d))}));function u(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3966:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=a(7462),l=a(3366),r=(a(7294),a(3905)),i=["components"],o={id:"alertdialog",title:"toBeAccessibleDialog()"},s=void 0,c={unversionedId:"matchers/alertdialog",id:"matchers/alertdialog",title:"toBeAccessibleDialog()",description:"An alert dialog is a modal dialog that interrupts the user's workflow to communicate an important",source:"@site/docs/matchers/to-be-accessible-dialog.md",sourceDirName:"matchers",slug:"/matchers/alertdialog",permalink:"/matchers/alertdialog",draft:!1,tags:[],version:"current",frontMatter:{id:"alertdialog",title:"toBeAccessibleDialog()"},sidebar:"mySidebar",previous:{title:"toBeAccessibleCheckbox()",permalink:"/matchers/checkbox"}},d={},p=[{value:"Syntax",id:"syntax",level:2},{value:"WAI-ARIA Roles, States, and Properties",id:"wai-aria-roles-states-and-properties",level:3},{value:"1. The element that contains all elements of the dialog, including the alert message and any dialog buttons, has <code>role</code> of <code>alertdialog</code>.",id:"1-the-element-that-contains-all-elements-of-the-dialog-including-the-alert-message-and-any-dialog-buttons-has-role-of-alertdialog",level:4},{value:"2. The alert dialog has an accessible label.",id:"2-the-alert-dialog-has-an-accessible-label",level:4},{value:"Keyboard Interaction",id:"keyboard-interaction",level:3}],m={toc:p};function u(e){var t=e.components,a=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"An alert dialog is a modal dialog that interrupts the user's workflow to communicate an important\nmessage and acquire a response. Examples include action confirmation prompts and error message\nconfirmations."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.w3.org/WAI/ARIA/apg/patterns/alertdialog/"},"WAI Alert Dialog Pattern")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.w3.org/WAI/ARIA/apg/example-index/dialog-modal/alertdialog.html"},"Alert Dialog Example"))),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { screen } from '@testing-library/dom'\n\ntest('alert dialog', () => {\n  document.body.innerHTML = '<div data-testid=\"dlg\" role=\"alertdialog\">\ud83d\udc4d</div>'\n\n  expect(screen.getByTestId('dlg')).toBeAccessibleDialog()\n})\n")),(0,r.kt)("h3",{id:"wai-aria-roles-states-and-properties"},"WAI-ARIA Roles, States, and Properties"),(0,r.kt)("h4",{id:"1-the-element-that-contains-all-elements-of-the-dialog-including-the-alert-message-and-any-dialog-buttons-has-role-of-alertdialog"},"1. The element that contains all elements of the dialog, including the alert message and any dialog buttons, has ",(0,r.kt)("inlineCode",{parentName:"h4"},"role")," of ",(0,r.kt)("inlineCode",{parentName:"h4"},"alertdialog"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- \u2705 PASS - role is set with attribute --\x3e\n<div role="alertdialog">Hey, listen!</div>\n\n\x3c!-- \u274c FAIL - role is not set or implicit --\x3e\n<span>Hey, listen!</span>\n')),(0,r.kt)("h4",{id:"2-the-alert-dialog-has-an-accessible-label"},"2. The alert dialog has an accessible label."),(0,r.kt)("p",null,"The element with role ",(0,r.kt)("inlineCode",{parentName:"p"},"alertdialog")," has either:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A value for ",(0,r.kt)("inlineCode",{parentName:"li"},"aria-labelledby")," that refers to the element containing the title of the dialog if the\ndialog has a visible label."),(0,r.kt)("li",{parentName:"ul"},"A value for ",(0,r.kt)("inlineCode",{parentName:"li"},"aria-label")," if the dialog does not have a visible label.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- \u2705 PASS - accessible name is set by aria-labelledby --\x3e\n<div aria-labelledby="the-label" role="alertdialog">\n  <h3 id="the-label">Sorry Mario.</h3>\n  <p>But the princess is in another castle!</p>\n</div>\n\n\x3c!-- \u2705 PASS - accessible name is set by aria-label --\x3e\n<div aria-label="Sorry Mario" role="alertdialog">\n  <p>But the princess is in another castle!</p>\n</div>\n\n\x3c!-- \u274c FAIL - accessible name is not set or implicit --\x3e\n<div role="alertdialog">\n  <p>But the princess is in another castle!</p>\n</div>\n')),(0,r.kt)("h3",{id:"keyboard-interaction"},"Keyboard Interaction"),(0,r.kt)("p",null,"See the keyboard interaction section for the modal dialog pattern."))}u.isMDXComponent=!0}}]);