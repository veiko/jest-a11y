"use strict";(self.webpackChunkjest_a11y=self.webpackChunkjest_a11y||[]).push([[634],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>p});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=n.createContext({}),o=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=o(e.components);return n.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=o(a),p=i,m=d["".concat(c,".").concat(p)]||d[p]||h[p]||r;return a?n.createElement(m,l(l({ref:t},u),{},{components:a})):n.createElement(m,l({ref:t},u))}));function p(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var o=2;o<r;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),i=a(6010);const r="tabItem_Ymn6";function l(e){var t=e.children,a=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,l),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>p});var n=a(7462),i=a(7294),r=a(6010),l=a(2389),s=a(7392),c=a(7094),o=a(2466);const u="tabList__CuJ",h="tabItem_LNqP";function d(e){var t,a,l=e.lazy,d=e.block,p=e.defaultValue,m=e.values,b=e.groupId,w=e.className,f=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=m?m:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),k=(0,s.l)(v,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===p?p:null!=(t=null!=p?p:null==(a=f.find((function(e){return e.props.default})))?void 0:a.props.value)?t:f[0].props.value;if(null!==y&&!v.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,c.U)(),x=g.tabGroupChoices,N=g.setTabGroupChoices,T=(0,i.useState)(y),E=T[0],I=T[1],O=[],A=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var S=x[b];null!=S&&S!==E&&v.some((function(e){return e.value===S}))&&I(S)}var j=function(e){var t=e.currentTarget,a=O.indexOf(t),n=v[a].value;n!==E&&(A(t),I(n),null!=b&&N(b,String(n)))},C=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n,i=O.indexOf(e.currentTarget)+1;a=null!=(n=O[i])?n:O[0];break;case"ArrowLeft":var r,l=O.indexOf(e.currentTarget)-1;a=null!=(r=O[l])?r:O[O.length-1]}null==(t=a)||t.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",u)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":d},w)},v.map((function(e){var t=e.value,a=e.label,l=e.attributes;return i.createElement("li",(0,n.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:function(e){return O.push(e)},onKeyDown:C,onFocus:j,onClick:j},l,{className:(0,r.Z)("tabs__item",h,null==l?void 0:l.className,{"tabs__item--active":E===t})}),null!=a?a:t)}))),l?(0,i.cloneElement)(f.filter((function(e){return e.props.value===E}))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},f.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function p(e){var t=(0,l.Z)();return i.createElement(d,(0,n.Z)({key:String(t)},e))}},3317:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>b,contentTitle:()=>p,default:()=>v,frontMatter:()=>d,metadata:()=>m,toc:()=>w});var n=a(7462),i=a(3366),r=a(7294),l=a(3905),s=a(5488),c=a(5162),o=function(e){var t=e.children;return r.createElement("div",{className:"example"},t)},u=function(){var e=r.useState(!1),t=e[0],a=e[1],n=(0,r.useCallback)((function(e){" "===e.key&&(e.preventDefault(),a((function(e){return!e})))}),[]);return r.createElement("div",{className:"switch-wrapper"},r.createElement("div",null,"Turn on the lights"),r.createElement("div",{"aria-checked":t,"aria-label":"Lights",className:"switch "+(t?"on":"off"),"data-testid":"an-switch",onClick:function(){return a((function(e){return!e}))},onKeyDown:n,role:"switch",tabIndex:0}))},h=["components"],d={id:"switch",title:"toBeAccessibleSwitch()"},p=void 0,m={unversionedId:"matchers/switch",id:"matchers/switch",title:"toBeAccessibleSwitch()",description:"A switch is an input widget that allows users to choose one of two values: on or off.",source:"@site/docs/matchers/to-be-accessible-switch.md",sourceDirName:"matchers",slug:"/matchers/switch",permalink:"/jest-a11y/matchers/switch",draft:!1,tags:[],version:"current",frontMatter:{id:"switch",title:"toBeAccessibleSwitch()"},sidebar:"sidebar",previous:{title:"toBeAccessibleSlider()",permalink:"/jest-a11y/matchers/slider"},next:{title:"toHaveFocusLock()",permalink:"/jest-a11y/matchers/focuslock"}},b={},w=[{value:"Usage",id:"usage",level:2},{value:"Syntax",id:"syntax",level:3},{value:"Test Summary",id:"test-summary",level:2},{value:"WAI-ARIA Roles, States, and Properties",id:"wai-aria-roles-states-and-properties",level:3},{value:"1. The widget has a <code>role</code> of <code>switch</code>.",id:"1-the-widget-has-a-role-of-switch",level:4},{value:"2. The switch has an accessible label.",id:"2-the-switch-has-an-accessible-label",level:4},{value:"3. The switch has a valid <code>aria-checked</code> attribute.",id:"3-the-switch-has-a-valid-aria-checked-attribute",level:4},{value:"Keyboard Interaction",id:"keyboard-interaction",level:3},{value:"External Resources",id:"external-resources",level:2},{value:"Web Accessibility Initiative",id:"web-accessibility-initiative",level:4}],f={toc:w};function v(e){var t=e.components,a=(0,i.Z)(e,h);return(0,l.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"intro-text"},"A ",(0,l.kt)("strong",null,"switch")," is an input widget that allows users to choose one of two values: on or off."),(0,l.kt)("p",null,"Switches are similar to ",(0,l.kt)("a",{parentName:"p",href:"/matchers/checkbox"},"checkboxes")," and toggle buttons, which can also serve as binary inputs. One difference, however, is that switches can only be used for binary input while checkboxes and toggle buttons allow implementations with the option of supporting a third middle state."),(0,l.kt)(o,{mdxType:"ExampleContainer"},(0,l.kt)(u,{mdxType:"Switch"})),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("h3",{id:"syntax"},"Syntax"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(c.Z,{label:"Vanilla JS",value:"js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"test('switch', () => {\n  document.body.innerHTML = '<div aria-checked=\"true\" id=\"switch\" role=\"switch\">Hey, listen!</div>'\n\n  expect(document.getElementById('switch')).toBeAccessibleSwitch()\n})\n"))),(0,l.kt)(c.Z,{default:!0,label:"React + Testing Library",value:"rtl",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import { render, screen } from '@testing-library/react'\n\ntest('switch', () => {\n  render(\n    <div aria-checked=\"true\" data-testid=\"switch\" role=\"switch\">\n      Hey, listen!\n    </div>,\n  )\n\n  expect(screen.getByTestId('switch')).toBeAccessibleSwitch()\n})\n")))),(0,l.kt)("h2",{id:"test-summary"},"Test Summary"),(0,l.kt)("p",null,"There are two different matchers for switches."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"toBeAccessibleSwitch")," matcher tests the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"\x3c!-- test-pass --\x3e\n\u2713 element has role switch\n\x3c!-- test-pass --\x3e\n\u2713 element has accessible label\n\x3c!-- test-pass --\x3e\n\u2713 element has aria-checked attribute\n\x3c!-- test-pass --\x3e\n\u2713 element toggles aria-checked on {space}\n\x3c!-- test-pass --\x3e\n\u2713 element label does not change when state changes\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"toBeAccessibleInputSwitch")," matcher should be used when the switch element is an input element with ",(0,l.kt)("inlineCode",{parentName:"p"},'type="checkbox"'),". This matcher tests the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"\x3c!-- test-pass --\x3e\n\u2713 element has role switch\n\x3c!-- test-pass --\x3e\n\u2713 element has accessible label\n\x3c!-- test-pass --\x3e\n\u2713 element toggles checked on {space}\n\x3c!-- test-pass --\x3e\n\u2713 element label does not change when state changes\n")),(0,l.kt)("admonition",{title:"Not Tested",type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"If a set of switches is presented as a logical group with a visible label, either:"),(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},"The switches are included in an element with role group that has the property aria-labelledby set to the ID of the element containing the group label."),(0,l.kt)("li",{parentName:"ul"},"The set is contained in an HTML fieldset and the label for the set is contained in an HTML legend element."))),(0,l.kt)("h3",{id:"wai-aria-roles-states-and-properties"},"WAI-ARIA Roles, States, and Properties"),(0,l.kt)("h4",{id:"1-the-widget-has-a-role-of-switch"},"1. The widget has a ",(0,l.kt)("inlineCode",{parentName:"h4"},"role")," of ",(0,l.kt)("inlineCode",{parentName:"h4"},"switch"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- \u2705 element has role switch --\x3e\n<div role="switch">hey, listen!</div>\n\n\x3c!-- \u274c element has role switch --\x3e\n<span>hey, listen!</span>\n')),(0,l.kt)("h4",{id:"2-the-switch-has-an-accessible-label"},"2. The switch has an accessible label."),(0,l.kt)("p",null,"The label can be provided by one of the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Visible text content contained within the element with ",(0,l.kt)("inlineCode",{parentName:"li"},"role")," switch."),(0,l.kt)("li",{parentName:"ul"},"A visible label referenced by the value of ",(0,l.kt)("inlineCode",{parentName:"li"},"aria-labelledby")," set on the element with ",(0,l.kt)("inlineCode",{parentName:"li"},"role")," switch."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"aria-label")," set on the element with ",(0,l.kt)("inlineCode",{parentName:"li"},"role")," switch.")),(0,l.kt)("admonition",{title:"Important",type:"info"},(0,l.kt)("p",{parentName:"admonition"},"It is critical the label on a switch does not change when its state changes.")),(0,l.kt)("h4",{id:"3-the-switch-has-a-valid-aria-checked-attribute"},"3. The switch has a valid ",(0,l.kt)("inlineCode",{parentName:"h4"},"aria-checked")," attribute."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- \u2705 element has valid aria-checked --\x3e\n<div aria-checked="true" aria-label="Lights" role="switch" />\n\n\x3c!-- \u274c element is missing aria-checked --\x3e\n<div aria-label="Lights" role="switch" />\n\n\x3c!-- \u274c element has invalid aria-checked --\x3e\n<div aria-checked="on" aria-label="Lights" role="switch" />\n')),(0,l.kt)("h3",{id:"keyboard-interaction"},"Keyboard Interaction"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("kbd",null,"Space"),": When focus is on the switch, changes the state of the switch.")),(0,l.kt)("h2",{id:"external-resources"},"External Resources"),(0,l.kt)("h4",{id:"web-accessibility-initiative"},"Web Accessibility Initiative"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.w3.org/WAI/ARIA/apg/patterns/switch/"},"WAI Switch Pattern")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.w3.org/WAI/ARIA/apg/example-index/switch/switch.html"},"Switch Example"))))}v.isMDXComponent=!0}}]);